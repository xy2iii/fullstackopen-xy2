{"ast":null,"code":"var _jsxFileName = \"/home/xy/Projets/fullstackopen/part1/test_env/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Display = ({\n  value\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, value);\n\nconst Button = ({\n  handleClick,\n  text\n}) => {\n  /*#__PURE__*/\n  React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, text);\n};\n\nconst App = props => {\n  const [value, setValue] = useState(10);\n\n  const setToValue = newValue => () => setValue(newValue);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: setToValue(1000),\n    text: \"thousand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: setToValue(0),\n    text: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: setToValue(value + 1),\n    text: \"increment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/xy/Projets/fullstackopen/part1/test_env/src/index.js"],"names":["React","useState","ReactDOM","Display","value","Button","handleClick","text","App","props","setValue","setToValue","newValue","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAAe,0CAAGA,KAAH,CAA/B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AACxC;AAAA;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,IAA/B;AACD,CAFD;;AAIA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAIC,QAAD,IAAc,MAAMF,QAAQ,CAACE,QAAD,CAA/C;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAER,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEO,UAAU,CAAC,IAAD,CAA/B;AAAuC,IAAA,IAAI,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,UAAU,CAAC,CAAD,CAA/B;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,UAAU,CAACP,KAAK,GAAG,CAAT,CAA/B;AAA4C,IAAA,IAAI,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAbD;;AAeAF,QAAQ,CAACW,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Display = ({ value }) => <>{value}</>;\n\nconst Button = ({ handleClick, text }) => {\n  <button onClick={handleClick}>{text}</button>;\n};\n\nconst App = (props) => {\n  const [value, setValue] = useState(10);\n\n  const setToValue = (newValue) => () => setValue(newValue);\n\n  return (\n    <div>\n      <Display value={value}></Display>\n      <Button handleClick={setToValue(1000)} text=\"thousand\"></Button>\n      <Button handleClick={setToValue(0)} text=\"reset\" />\n      <Button handleClick={setToValue(value + 1)} text=\"increment\" />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}