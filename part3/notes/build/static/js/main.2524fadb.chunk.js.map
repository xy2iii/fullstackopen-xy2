{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","key","find","n","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,sBAAwB,iBAEvD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCA3BK,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAEtB,yBAAKJ,UAAU,SAASI,I,gBCmBlB,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJR,QAAS,mCACTS,KAAM,2BACNX,WAAW,GAEb,OAAOM,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC4D5BK,EA5EH,SAAAC,GAAS,MAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGWF,mBAAS,iBAHpB,mBAGZG,EAHY,KAGHC,EAHG,OAIWJ,oBAAS,GAJpB,mBAIZK,EAJY,KAIHC,EAJG,OAKqBN,mBAAS,wBAL9B,mBAKZO,EALY,KAKEC,EALF,KAYnBC,qBALa,WACXC,IAAqBnB,MAAK,SAAAE,GACxBS,EAAST,QAGG,IAEhB,IAmCMkB,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAApC,GAAI,OAAIA,EAAKG,aAEhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASuB,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGM,EAAYE,KAAI,SAAArC,GAAI,OACnB,kBAAC,EAAD,CACEsC,IAAKtC,EAAKa,GACVb,KAAMA,EACNC,kBAnDiBY,EAmDoBb,EAAKa,GAnDnB,WAC/B,IAAMb,EAAOyB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAOA,KAChCc,EAAO,eAAQ3B,EAAR,CAAcG,WAAYH,EAAKG,YAG5C+B,EACUrB,EAAIc,GACXZ,MAAK,SAAAE,GAAI,OAAIS,EAASD,EAAMY,KAAI,SAAArC,GAAI,OAAKA,EAAKa,KAAOA,EAAKb,EAAOiB,SACjEwB,OAAM,SAAAC,GACLV,EAAgB,SAAD,OACJhC,EAAKK,QADD,sCAGfsC,YAAW,kBAAMX,EAAgB,QAAO,KAExCN,EAASD,EAAMW,QAAO,SAAAI,GAAC,OAAIA,EAAE3B,KAAOA,aAdf,IAAAA,MAuDvB,0BAAM+B,SArCM,SAAAC,GACdA,EAAMC,iBAEN,IAAMC,EAAa,CACjB1C,QAASsB,EACTb,MAAM,IAAIkC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BjB,EAAmBa,GAAYhC,MAAK,SAAAE,GAClCS,EAASD,EAAMP,OAAOD,IACtBW,EAAW,SA2BT,2BAAOwB,MAAOzB,EAAS0B,SAvBJ,SAAAR,GAAK,OAAIjB,EAAWiB,EAAMS,OAAOF,UAwBpD,4BAAQG,KAAK,UAAb,W,MCvERC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2524fadb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important ' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) return null\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n}\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = props => {\n  // notes is an initial value, passed by props.\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('an error happened...')\n\n  const hook = () => {\n    noteService.getAll().then(data => {\n      setNotes(data)\n    })\n  }\n  useEffect(hook, [])\n\n  const toggleImportanceOf = id => () => {\n    const note = notes.find(n => n.id === id)\n    const newNote = { ...note, important: !note.important }\n\n    // Set both the server and the client's state.\n    noteService\n      .update(id, newNote)\n      .then(data => setNotes(notes.map(note => (note.id !== id ? note : data))))\n      .catch(error => {\n        setErrorMessage(\n          `Note \"${note.content}\" was already deleted from server`\n        )\n        setTimeout(() => setErrorMessage(null), 5000)\n\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = event => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService.create(noteObject).then(data => {\n      setNotes(notes.concat(data))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = event => setNewNote(event.target.value)\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}></Notification>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={toggleImportanceOf(note.id)}\n          ></Note>\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}